<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFrameworks>net462;net481;net9.0</TargetFrameworks>
	 <LangVersion>12.0</LangVersion>
    <StartupObject>BootstrapCompile.Compile</StartupObject>
	  <EnableUnsafeBinaryFormatterSerialization>true</EnableUnsafeBinaryFormatterSerialization>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <WarningLevel>0</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="clojure.core.specs.alpha" Version="0.4.74" />
    <PackageReference Include="clojure.spec.alpha" Version="0.5.238" />
    <PackageReference Include="DynamicLanguageRuntime" Version="1.3.5" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Clojure.Source\Clojure.Source.csproj" />
    <ProjectReference Include="..\Clojure\Clojure.csproj" />
  </ItemGroup>


  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="  '$(TargetFramework)' == 'net462' OR '$(TargetFramework)' == 'net481' OR '$(TargetFramework)' == 'net9.0' ">
		<PropertyGroup Condition=" '$(TargetFramework)' == 'net462' OR '$(TargetFramework)' == 'net481' ">
			<TargetCmdline Condition=" $(TargetCmdline) == '' ">$(TargetPath)</TargetCmdline>
			<TargetCmdline Condition=" '$(OS)' == 'Unix' ">mono $(TargetPath)</TargetCmdline>
		</PropertyGroup>
		<PropertyGroup Condition=" '$(TargetFramework)' == 'net9.0' ">
			<TargetCmdline Condition=" $(TargetCmdline) == '' ">$(TargetDir)$(TargetName).exe</TargetCmdline>
			<TargetCmdline Condition=" '$(OS)' == 'Unix' ">mono $(TargetPath)</TargetCmdline>
		</PropertyGroup>
		<Message Importance="high" Text="TargetCmdLine = '$(TargetCmdLine)'"/>
		<Exec Condition=" '$(TargetFramework)' == 'net462' OR '$(TargetFramework)' == 'net481'" Command="$(TargetCmdline) clojure.core clojure.core.protocols clojure.core.server clojure.core.reducers clojure.main clojure.set clojure.zip  clojure.walk clojure.stacktrace clojure.template clojure.test clojure.test.tap clojure.test.junit clojure.pprint clojure.clr.io clojure.repl clojure.clr.shell clojure.string clojure.data clojure.reflect  clojure.edn clojure.datafy clojure.instant clojure.uuid clojure.math clojure.clr.basis.impl clojure.clr.basis clojure.clr.process clojure.tools.deps.interop clojure.repl.deps" WorkingDirectory="$(OutDir)" />
		<Exec Condition=" '$(TargetFramework)' == 'net9.0' "                                    Command="$(TargetCmdline) clojure.core clojure.core.protocols clojure.core.server clojure.core.reducers clojure.main clojure.set clojure.zip  clojure.walk clojure.stacktrace clojure.template clojure.test clojure.test.tap clojure.test.junit clojure.pprint clojure.clr.io clojure.repl clojure.clr.shell clojure.string clojure.data clojure.reflect  clojure.edn clojure.datafy clojure.instant clojure.uuid clojure.math clojure.clr.basis.impl clojure.clr.basis clojure.clr.process clojure.tools.deps.interop clojure.repl.deps" WorkingDirectory="$(OutDir)" />
		<ItemGroup>
			<CljCoreBin Include="$(ProjectDir)$(OutDir)clojure*.dll" />
		</ItemGroup>
		<Copy SourceFiles="@(CljCoreBin)" DestinationFolder="$(SolutionDir)Clojure.Main461\$(OutDir)" Condition="  '$(TargetFramework)' == 'net462' "/>
		<Copy SourceFiles="@(CljCoreBin)" DestinationFolder="$(SolutionDir)Clojure.Main461\Content\$(OutDir)" Condition="  '$(TargetFramework)' == 'net462' "/>
	    <Copy SourceFiles="@(CljCoreBin)" DestinationFolder="$(SolutionDir)Clojure.Main461\$(OutDir)" Condition="  '$(TargetFramework)' == 'net481' "/>
	    <Copy SourceFiles="@(CljCoreBin)" DestinationFolder="$(SolutionDir)Clojure.Main461\Content\$(OutDir)" Condition="  '$(TargetFramework)' == 'net481' "/>	  
	    <Copy SourceFiles="@(CljCoreBin)" DestinationFolder="$(SolutionDir)Clojure.Main\$(OutDir)" Condition="  '$(TargetFramework)' == 'net9.0' "/>
	    <Copy SourceFiles="@(CljCoreBin)" DestinationFolder="$(SolutionDir)Clojure.Main\Content\$(OutDir)" Condition="  '$(TargetFramework)' == 'net462' "/>
	</Target>



</Project>
